APPLICATION_NAME="michael-terraform"
URL="http://example.com"
CLIENT_SECRET="password"
ROLES_TO_APPLY=(Owner)

####################################################
## DON'T EDIT UNDER HERE
####################################################

echoerr() { cat <<< "$@" 1>&2; }

ACCOUNT_INFO=$(azure account list --json)

if [[ "$ACCOUNT_INFO" == "data: table" ]]; then
    echoerr "Please login with \`azure login\` before running this script"; > /
fi

echoerr "This may take up to 30 seconds, please be patient"

SUBSCRIPTION_ID=$(azure account show --json | jq -r ".[0].id")
TENANT_ID=$(azure account show --json | jq -r ".[0].tenantId")

echoerr "Generating client ID"
CLIENT_ID=$(azure ad app create --json -n michael-terraform -i $URL --home-page $URL -p $CLIENT_SECRET | jq -r .appId)
sleep 10

echoerr "Generating Service Principal"
azure ad sp create -a "$CLIENT_ID" > /dev/null
sleep 10

echoerr "Applying roles"
for role in $ROLES_TO_APPLY; do
    azure role assignment create --spn $URL -o $role -c /subscriptions/$SUBSCRIPTION_ID > /dev/null
done

echoerr "Writing demo terraform plan"
cat <<EOL
provider "azurerm" {
  subscription_id = "$SUBSCRIPTION_ID"
  client_id       = "$CLIENT_ID"
  client_secret   = "$CLIENT_SECRET"
  tenant_id       = "$TENANT_ID"
}

resource "azurerm_resource_group" "terraform-test" {
    name     = "production"
    location = "West US"
}
EOL

echoerr "Run this terraform file with \`terraform plan\` to test your credentials"
